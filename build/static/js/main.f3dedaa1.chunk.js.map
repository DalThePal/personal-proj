{"version":3,"sources":["duck/types.js","duck/reducer.js","duck/controller.js","duck/actions.js","duck/index.js","component/monsters/Monster.js","component/Header.js","component/dashboard/DashItem.js","component/dashboard/Dashboard.js","component/monsters/Monsters.js","component/spells/Spell.js","component/spells/Spells.js","component/armor/Arm.js","component/armor/UserArm.js","component/armor/Armor.js","component/weapons/Weapon.js","component/weapons/Weapons.js","component/equipment/Equip.js","component/equipment/UserEquip.js","component/equipment/Equipment.js","component/Login.js","component/mounts/Mount.js","component/mounts/UserMount.js","component/mounts/Mounts.js","component/Favorites.js","routes.js","App.js","store.js","index.js"],"names":["types","reducer","combineReducers","user","state","arguments","length","undefined","action","type","Object","assign","payload","monsters","spells","equipment","slice","armor","weapons","mounts","dash","concat","data","index","findIndex","item","id","toConsumableArray","displayDashItem","userArmor","name","editIndex","console","log","dashIndex","userEquipment","userMounts","search","controller","axios","get","then","res","results","duck_actions","promise","post","delete","obj","put","string","Monster","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","monster","loading","getData","url","prevProps","setState","_this2","setTimeout","_this3","specialAbilities","actions","legendaryActions","map","react_default","a","createElement","className","key","desc","legendary_actions","special_abilities","ability","style","display","justifyContent","alignItems","react_loading_default","color","size","alignment","armor_class","hit_points","hit_dice","speed","strength","dexterity","constitution","intelligence","wisdom","charisma","strength_save","dexterity_save","constitution_save","intelligence_save","widsom_save","charisma_save","senses","languages","challenge_rating","onClick","addToDash","Component","connect","dispatch","Header","src","alt","height","title","placeholder","onChange","e","target","value","nickname","href","removeFromDash","react_motion","defaultStyle","width","spring","_ref","es","to","objectSpread","dashType","Dashboard","getDash","monstItems","dashboard_DashItem","link","spellItems","spell","armorItems","arm","userArmorItems","userArm","dashitem","weaponItems","weapon","equipItems","equip","userEquipItems","userEquip","mountItems","mount","userMountItems","userMount","Monsters","getMonsters","getUser","filter","toUpperCase","includes","monsters_Monster","component_Header","dashboard_Dashboard","Spell","casting_time","range","components","material","duration","higher_level","Spells","getSpells","spells_Spell","Arm","cost","armorClass","_this$state","armor_category","quantity","unit","base","dex_bonus","max_bonus","str_minimum","stealth_disadvantage","weight","UserArm","edit","category","stealth","editUserArm","armorclass","userArmDash","dashItem","handleChange","remUserArm","handleSave","Armor","getEquipment","getUserArm","armor_Arm","armor_UserArm","createArm","Weapon","damage","damageType","properties","damage_type","prop","category_range","dice_count","dice_value","Weapons","weapons_Weapon","Equip","gear_category","UserEquip","description","editUserEquip","_this$props","remUserEquip","Equipment","getUserEquip","equipment_Equip","equipment_UserEquip","createEquip","Login","Mount","vehicle_category","capacity","UserMount","editUserMount","remUserMount","Mounts","getUserMount","mounts_Mount","mounts_UserMount","createMount","Favorites","routes","exact","path","component","App","middleware","applyMiddleware","promiseMiddleware","createStore","ReactDOM","render","react_redux_es","store","src_App_0","document","getElementById","getState"],"mappings":"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","file":"static/js/main.f3dedaa1.chunk.js","sourcesContent":["// DASHBOARD\r\nconst ADD_TO_DASH = 'ADD_TO_DASH';\r\nconst ADD_TO_USER_DASH = 'ADD_TO_USER_DASH';\r\nconst GET_DASH = 'GET_DASH';\r\nconst REM_FROM_DASH = 'REM_FROM_DASH';\r\nconst DISPLAY_DASH_ITEM = 'DISPLAY_DASH_ITEM';\r\n\r\n// USERS\r\nconst UPDATE_USER_INFO = 'UPDATE_USER_INFO';\r\n\r\n// DND API\r\nconst GET_MONSTERS = 'GET_MONSTERS';\r\nconst GET_SPELLS = 'GET_SPELLS';\r\nconst GET_EQUIPMENT = 'GET_EQUIPMENT';\r\n\r\n// EQUIPMENT \r\nconst CREATE_EQUIP = 'CREATE_EQUIP';\r\nconst GET_USER_EQUIP = 'GET_USER_EQUIP';\r\nconst EDIT_USER_EQUIP = 'EDIT_USER_EQUIP';\r\nconst REM_USER_EQUIP = 'REM_USER_EQUIP';\r\n\r\n// MOUNTS\r\nconst CREATE_MOUNT = 'CREATE_MOUNT';\r\nconst GET_USER_MOUNT = 'GET_USER_MOUNT';\r\nconst EDIT_USER_MOUNT = 'EDIT_USER_MOUNT';\r\nconst REM_USER_MOUNT = 'REM_USER_MOUNT';\r\n\r\n// ARMOR\r\nconst CREATE_ARM = 'CREATE_ARM';\r\nconst GET_USER_ARM = 'GET_USER_ARM';\r\nconst EDIT_USER_ARM = 'EDIT_USER_ARM';\r\nconst REM_USER_ARM = 'REM_USER_ARM';\r\nconst USER_ARM_DASH = 'USER_ARM_DASH'\r\n\r\n// SEARCH\r\n\r\nconst SEARCH = 'SEARCH';\r\n\r\nexport default {\r\n\r\n    // DASHBOARD\r\n\r\n    ADD_TO_DASH,\r\n    ADD_TO_USER_DASH,\r\n    GET_DASH,\r\n    REM_FROM_DASH,\r\n    DISPLAY_DASH_ITEM,\r\n\r\n    // USERS\r\n\r\n    UPDATE_USER_INFO,\r\n\r\n    // DND API\r\n\r\n    GET_MONSTERS,\r\n    GET_SPELLS,\r\n    GET_EQUIPMENT,\r\n\r\n    // EQUIPMENT \r\n\r\n    CREATE_EQUIP,\r\n    GET_USER_EQUIP,\r\n    EDIT_USER_EQUIP,\r\n    REM_USER_EQUIP,\r\n\r\n    // MOUNTS\r\n\r\n    CREATE_MOUNT,\r\n    GET_USER_MOUNT,\r\n    EDIT_USER_MOUNT,\r\n    REM_USER_MOUNT,\r\n\r\n    // ARMOR\r\n\r\n    CREATE_ARM,\r\n    GET_USER_ARM,\r\n    EDIT_USER_ARM,\r\n    REM_USER_ARM,\r\n    USER_ARM_DASH,\r\n\r\n    // SEARCH\r\n\r\n    SEARCH\r\n}","import types from './types';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const initialState = {\r\n    user: {},\r\n    monsters: [],\r\n    spells: [],\r\n    equipment: [],\r\n    armor: [],\r\n    weapons: [],\r\n    mounts: [],\r\n    dash: [],\r\n    displayDashItem: {},\r\n    userArmor: [],\r\n    userEquipment: [],\r\n    userMounts: [],\r\n    search: ''\r\n};\r\n\r\nconst dash = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.ADD_TO_DASH + '_FULFILLED':\r\n            return state.concat(action.payload.data);\r\n\r\n        case types.REM_FROM_DASH + '_FULFILLED':\r\n            let index = state.findIndex(item => item.id === action.payload.data[0].id);\r\n            return [...state.slice(0, index), ...state.slice(index + 1)];\r\n\r\n        case types.GET_DASH + '_FULFILLED':\r\n            if (state.length === 0) {\r\n                return [...state, ...action.payload.data];\r\n            } else return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst displayDashItem = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.DISPLAY_DASH_ITEM:\r\n            return Object.assign({}, state, action.payload);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst monsters = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.GET_MONSTERS + '_FULFILLED':\r\n            let monsters = action.payload;\r\n            return monsters;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst spells = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.GET_SPELLS + '_FULFILLED':\r\n            let spells = action.payload;\r\n            return spells;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst equipment = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.GET_EQUIPMENT + '_FULFILLED':\r\n            let equipment = action.payload.slice(50, 191);\r\n            return equipment;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst mounts = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.GET_EQUIPMENT + '_FULFILLED':\r\n            let mounts = action.payload.slice(191);\r\n            return mounts;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst weapons = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.GET_EQUIPMENT + '_FULFILLED':\r\n            let weapons = action.payload.slice(0, 37);\r\n            return weapons;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst armor = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.GET_EQUIPMENT + '_FULFILLED':\r\n            let armor = action.payload.slice(37, 50);\r\n            return armor;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst userArmor = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.GET_USER_ARM + '_FULFILLED':\r\n            return action.payload.data;\r\n\r\n        case types.CREATE_ARM + '_FULFILLED':\r\n            return state.concat(action.payload.data);\r\n\r\n        case types.REM_USER_ARM + '_FULFILLED':\r\n            let index = state.findIndex(item => item.name === action.payload.data[0].name);\r\n            return [...state.slice(0, index), ...state.slice(index + 1)];\r\n\r\n        case types.EDIT_USER_ARM + '_FULFILLED':\r\n            let editIndex = state.findIndex(item => item.name === action.payload.data[0].name);\r\n            return [...state.slice(0, editIndex), action.payload.data[0], ...state.slice(editIndex + 1)];\r\n\r\n        case types.USER_ARM_DASH + '_FULFILLED':\r\n            console.log(action.payload)\r\n            let dashIndex = state.findIndex(item => item.id === action.payload.data[0].id);\r\n            return [...state.slice(0, dashIndex), action.payload.data[0], ...state.slice(dashIndex + 1)];\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst user = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.UPDATE_USER_INFO + '_FULFILLED':\r\n            return Object.assign({}, state, action.payload);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst userEquipment = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.GET_USER_EQUIP + '_FULFILLED':\r\n            return state.concat(action.payload.data);\r\n\r\n        case types.CREATE_EQUIP + '_FULFILLED':\r\n            return state.concat(action.payload.data);\r\n\r\n        case types.REM_USER_EQUIP + '_FULFILLED':\r\n            let index = state.findIndex(item => item.name === action.payload.data[0].name);\r\n            return [...state.slice(0, index), ...state.slice(index + 1)];\r\n\r\n        case types.EDIT_USER_EQUIP + '_FULFILLED':\r\n            let editIndex = state.findIndex(item => item.name === action.payload.data[0].name);\r\n            return [...state.slice(0, editIndex), action.payload.data[0], ...state.slice(editIndex + 1)];\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst userMounts = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case types.GET_USER_MOUNT + '_FULFILLED':\r\n            return state.concat(action.payload.data);\r\n\r\n        case types.CREATE_MOUNT + '_FULFILLED':\r\n            return state.concat(action.payload.data);\r\n\r\n        case types.REM_USER_MOUNT + '_FULFILLED':\r\n            let index = state.findIndex(item => item.name === action.payload.data[0].name);\r\n            return [...state.slice(0, index), ...state.slice(index + 1)];\r\n\r\n        case types.EDIT_USER_MOUNT + '_FULFILLED':\r\n            let editIndex = state.findIndex(item => item.name === action.payload.data[0].name);\r\n            return [...state.slice(0, editIndex), action.payload.data[0], ...state.slice(editIndex + 1)];\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst search = (state = '', action) => {\r\n    switch (action.type) {\r\n\r\n        case types.SEARCH:\r\n            return action.payload;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n\r\n    user,\r\n    monsters,\r\n    spells,\r\n    equipment,\r\n    armor,\r\n    weapons,\r\n    mounts,\r\n    dash,\r\n    displayDashItem,\r\n    userArmor,\r\n    userEquipment,\r\n    userMounts,\r\n    search\r\n\r\n});\r\n\r\nexport default reducer;","import axios from 'axios';\r\n\r\nconst monstURL = 'http://www.dnd5eapi.co/api/monsters/';\r\nconst spellURL = 'http://www.dnd5eapi.co/api/spells/';\r\nconst equipURL = 'http://www.dnd5eapi.co/api/equipment/';\r\n\r\nconst getEquipment = function () {\r\n    console.log('got to getEquipment')\r\n    return axios.get(equipURL).then(res => res.data.results);\r\n}\r\n\r\nconst getMonsters = function () {\r\n    console.log('got to getMonsters')\r\n    return axios.get(monstURL).then(res => res.data.results);\r\n}\r\n\r\nconst getSpells = function () {\r\n    console.log('got to getSpells')\r\n    return axios.get(spellURL).then(res => res.data.results);\r\n}\r\n\r\nexport default {\r\n    getEquipment,\r\n    getMonsters,\r\n    getSpells\r\n}\r\n","import types from './types';\r\nimport axios from 'axios';\r\nimport controller from './controller.js';\r\n\r\n// USERS\r\n\r\nconst getUser = () => {\r\n    const promise = axios.get('/auth/me')\r\n    return {\r\n        type: types.UPDATE_USER_INFO,\r\n        payload: promise\r\n    }\r\n}\r\n\r\n// DASHBOARD\r\n\r\nconst displayDashItem = (item) => {\r\n    return {\r\n        type: types.DISPLAY_DASH_ITEM,\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst getDash = () => {\r\n    const promise = axios.get(`/dashItems`)\r\n    return {\r\n        type: types.GET_DASH,\r\n        payload: promise\r\n    }\r\n\r\n}\r\n\r\nconst addToDash = (item) => {\r\n    const promise = axios.post('/dashItems', item)\r\n    return {\r\n        type: types.ADD_TO_DASH,\r\n        payload: promise\r\n    }\r\n\r\n}\r\n\r\nconst addToUserDash = (item) => {\r\n    const promise = axios.post('/userDashItems', item)\r\n    return {\r\n        type: types.ADD_TO_USER_DASH,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst remFromDash = (item) => {\r\n    const promise = axios.delete(`/dashItems/${item}`)\r\n    return {\r\n        type: types.REM_FROM_DASH,\r\n        payload: promise\r\n    }\r\n}\r\n\r\n\r\n// DND API\r\n\r\nconst getMonsters = () => {\r\n    return {\r\n        type: types.GET_MONSTERS,\r\n        payload: controller.getMonsters()\r\n    }\r\n}\r\n\r\n\r\nconst getSpells = () => {\r\n    return {\r\n        type: types.GET_SPELLS,\r\n        payload: controller.getSpells()\r\n    }\r\n}\r\n\r\nconst getEquipment = () => {\r\n    return {\r\n        type: types.GET_EQUIPMENT,\r\n        payload: controller.getEquipment()\r\n    }\r\n}\r\n\r\n// EQUIPMENT\r\n\r\nconst createEquip = (item) => {\r\n    const promise = axios.post('/Equipment', item);\r\n    return {\r\n        type: types.CREATE_EQUIP,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst getUserEquip = () => {\r\n    const promise = axios.get('/Equipment');\r\n    return {\r\n        type: types.GET_USER_EQUIP,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst editUserEquip = (obj) => {\r\n    const promise = axios.put('/Equipment', obj);\r\n    return {\r\n        type: types.EDIT_USER_EQUIP,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst remUserEquip = (item) => {\r\n    const promise = axios.delete(`/Equipment/${item}`);\r\n    return {\r\n        type: types.REM_USER_EQUIP,\r\n        payload: promise\r\n    }\r\n}\r\n\r\n// MOUNTS\r\n\r\nconst getUserMount = () => {\r\n    const promise = axios.get('/Mounts');\r\n    return {\r\n        type: types.GET_USER_MOUNT,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst createMount = (item) => {\r\n    const promise = axios.post('/Mounts', item);\r\n    return {\r\n        type: types.CREATE_MOUNT,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst remUserMount = (item) => {\r\n    const promise = axios.delete(`/Mounts/${item}`);\r\n    return {\r\n        type: types.REM_USER_MOUNT,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst editUserMount = (item) => {\r\n    const promise = axios.put('/Mounts', item);\r\n    return {\r\n        type: types.EDIT_USER_MOUNT,\r\n        payload: promise\r\n    }\r\n}\r\n\r\n// ARMOR\r\n\r\nconst getUserArm = () => {\r\n    const promise = axios.get('/Armor');\r\n    return {\r\n        type: types.GET_USER_ARM,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst createArm = (item) => {\r\n    const promise = axios.post('/Armor', item);\r\n    return {\r\n        type: types.CREATE_ARM,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst remUserArm = (item) => {\r\n    const promise = axios.delete(`/Armor/${item}`);\r\n    return {\r\n        type: types.REM_USER_ARM,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst editUserArm = (item) => {\r\n    const promise = axios.put('/Armor', item);\r\n    return {\r\n        type: types.EDIT_USER_ARM,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst userArmDash = (item) => {\r\n    const promise = axios.put(`/ArmorDash`, item);\r\n    return {\r\n        type: types.USER_ARM_DASH,\r\n        payload: promise\r\n    }\r\n}\r\n\r\nconst search = (string) => {\r\n    return {\r\n        type: types.SEARCH,\r\n        payload: string\r\n    }\r\n}\r\n\r\nexport default {\r\n\r\n// USERS\r\n\r\n    getUser,\r\n\r\n// DASHBOARD\r\n\r\n    displayDashItem,\r\n    getDash,\r\n    addToDash,\r\n    addToUserDash,\r\n    remFromDash,\r\n\r\n// DND API\r\n\r\n    getMonsters,\r\n    getSpells,\r\n    getEquipment,\r\n\r\n// EQUIPMENT\r\n\r\n    createEquip,\r\n    getUserEquip,\r\n    editUserEquip,\r\n    remUserEquip,\r\n\r\n// MOUNTS\r\n\r\n    getUserMount,\r\n    createMount,\r\n    remUserMount,\r\n    editUserMount,\r\n\r\n// ARMOR\r\n\r\n    getUserArm,\r\n    createArm,\r\n    remUserArm,\r\n    editUserArm,\r\n    userArmDash,\r\n    \r\n    // SEARCH\r\n\r\n    search\r\n\r\n}","import reducer, { initialState } from './reducer';\r\nimport actions from './actions';\r\nimport types from './types';\r\n\r\nexport {\r\n    actions,\r\n    types,\r\n    initialState\r\n}\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\n\r\nclass Monster extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            monster: {},\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.props.url);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({loading: true});\r\n            this.getData(this.props.url);\r\n        }\r\n    }\r\n\r\n    getData(url) {\r\n        axios.get(url).then(res => {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    monster: res.data\r\n                }, this.setState({loading: false}))}, 2000\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { monster } = this.state;\r\n\r\n        let specialAbilities = null;\r\n        let actions = null;\r\n        let legendaryActions = null;\r\n\r\n        if (this.state.monster.actions) {\r\n\r\n            actions = this.state.monster.actions.map((action, index) => {\r\n                return (\r\n                    <div className='ActAb' key={index}>\r\n                        <h3>{action.name}.</h3>\r\n                        <p>{action.desc}</p>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n        if (this.state.monster.legendary_actions) {\r\n\r\n            legendaryActions = this.state.monster.legendary_actions.map((action, index) => {\r\n                return (\r\n                    <div className='ActAb' key={index}>\r\n                        <h3>{action.name}.</h3>\r\n                        <p>{action.desc}</p>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n        if (this.state.monster.special_abilities) {\r\n\r\n            specialAbilities = this.state.monster.special_abilities.map((ability, index) => {\r\n                return (\r\n                    <div className='ActAb' key={index}>\r\n                        <h3>{ability.name}</h3>\r\n                        <p>{ability.desc}</p>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className='Monster' style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <ReactLoading type={'bars'} color={'black'} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className='Monster'>\r\n\r\n                    <h1>{this.props.name}</h1>\r\n                    <h2>{monster.size} {monster.type}, {monster.alignment}</h2>\r\n                    <p>Armor class: {monster.armor_class}</p>\r\n                    <p>Hit Points: {monster.hit_points} ({monster.hit_dice})</p>\r\n                    <p>Speed: {monster.speed} </p>\r\n                    <div className='Stats'>\r\n                        <p>STR {monster.strength}</p>\r\n                        <p>DEX {monster.dexterity}</p>\r\n                        <p>CON {monster.constitution}</p>\r\n                        <p>INT {monster.intelligence}</p>\r\n                        <p>WIS {monster.wisdom}</p>\r\n                        <p>CHA {monster.charisma}</p>\r\n                    </div>\r\n                    <p>Saving Throws:\r\n                    {monster.strength_save ? `str +${monster.strength_save}` : ''}\r\n                        {monster.dexterity_save ? `dex +${monster.dexterity_save}` : ''}\r\n                        {monster.constitution_save ? `con +${monster.constitution_save}` : ''}\r\n                        {monster.intelligence_save ? `int +${monster.intelligence_save}` : ''}\r\n                        {monster.widsom_save ? `wis +${monster.widsom_save}` : ''}\r\n                        {monster.charisma_save ? `cha +${monster.charisma_save}` : ''}\r\n                    </p>\r\n                    <p>senses: {monster.senses}</p>\r\n                    <p>languages: {monster.languages}</p>\r\n                    <p>challenge: {monster.challenge_rating}</p>\r\n                    <div>{specialAbilities}</div>\r\n                    <div>{actions}</div>\r\n                    <div>{legendaryActions}</div>\r\n\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.addToDash({\r\n                            name: this.state.monster.name,\r\n                            url: this.state.monster.url,\r\n                            type: 'monster'\r\n                        })}\r\n                        >ADD\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToDash: (payload) => dispatch(actions.addToDash(payload))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Monster)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../duck';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='Header'>\r\n                <div className='logoDiv'>\r\n                    <img src='DND-Icon.png' alt='DND' height='100%' />\r\n                </div>\r\n                <div className='Title'>{this.props.title}</div>\r\n                <input placeholder='SEARCH' onChange={e => this.props.search(e.target.value)}/>\r\n                <div className='ProfileDiv'>\r\n                    <p>{this.props.user.nickname}</p>\r\n                    <button><a href={'/logout'}>LOGOUT</a></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        search: (string) => dispatch(actions.search(string))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\nimport { Motion, spring } from 'react-motion';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {actions} from '../../duck';\r\n\r\nconst DashItem = (props) => {\r\n\r\n        const { item } = props;\r\n        return (\r\n            <Motion\r\n                defaultStyle={{ width: 0, height: 0 }}\r\n                style={{ width: spring(100) }}\r\n            >\r\n                {({ width }) =>\r\n\r\n                    <div className='DashItem' style={{\r\n                        \"width\": `${width}%`\r\n                    }}>\r\n                        <Link\r\n                            className='ItemBut'\r\n                            to='/favorites'\r\n                        >\r\n                            <button\r\n                                className='ItemBut'\r\n                                onClick={() => props.displayDashItem({...item, type: props.dashType})}\r\n                            >{item.name}\r\n                            </button>\r\n                        </Link>\r\n                        <button\r\n                            className='DelBut'\r\n                            onClick={() => { props.removeFromDash(item.id) }}\r\n                        >del\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </Motion>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        displayDashItem: (payload) => dispatch(actions.displayDashItem(payload)),\r\n        removeFromDash: (payload) => dispatch(actions.remFromDash(payload))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(DashItem);","import React, { Component } from 'react';\r\nimport DashItem from './DashItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getDash();\r\n    }\r\n\r\n    render() {\r\n        const { dash } = this.props;\r\n        const monstItems = dash.map((monster, index) => {\r\n            if (monster.type === 'monster') {\r\n                return (\r\n                    <DashItem\r\n                        key={index}\r\n                        item={monster}\r\n                        dashType={'monster'}\r\n                        link={'/Monsters'}\r\n                    />\r\n                )\r\n            } else return null\r\n\r\n        })\r\n\r\n        const spellItems = dash.map((spell, index) => {\r\n            if (spell.type === 'spell') {\r\n                return (\r\n                    <DashItem\r\n                        key={index}\r\n                        item={spell}\r\n                        dashType={'spell'}\r\n                        link={'/Spells'}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const armorItems = dash.map((arm, index) => {\r\n            if (arm.type === 'arm') {\r\n                return (\r\n                    <DashItem\r\n                        key={index}\r\n                        item={arm}\r\n                        dashType={'armor'}\r\n                        link={'/Armor'}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const userArmorItems = this.props.userArmor.map((userArm, index) => {\r\n            if (userArm.dashitem === true) {\r\n                return (\r\n                    <DashItem\r\n                        key={index}\r\n                        item={userArm}\r\n                        dashType={'userArm'}\r\n                        link={'/Armor'}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const weaponItems = dash.map((weapon, index) => {\r\n            if (weapon.type === 'weapon') {\r\n                return (\r\n                    <DashItem\r\n                        key={index}\r\n                        item={weapon}\r\n                        dashType={'weapon'}\r\n                        link={'/Weapons'}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const equipItems = dash.map((equip, index) => {\r\n            if (equip.type === 'equip') {\r\n                return (\r\n                    <DashItem\r\n                        key={index}\r\n                        item={equip}\r\n                        dashType={'equipment'}\r\n                        link={'/Equipment'}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const userEquipItems = dash.map((userEquip, index) => {\r\n            if (userEquip.type === 'userEquip') {\r\n                return (\r\n                    <DashItem\r\n                        key={index}\r\n                        item={userEquip}\r\n                        dashType={'userEquip'}\r\n                        link={'/Equipment'}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const mountItems = dash.map((mount, index) => {\r\n            if (mount.type === 'mount') {\r\n                return (\r\n                    <DashItem\r\n                        key={index}\r\n                        item={mount}\r\n                        dashType={'mount'}\r\n                        link={'/Mounts'}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const userMountItems = dash.map((userMount, index) => {\r\n            if (userMount.type === 'userMount') {\r\n                return (\r\n                    <DashItem \r\n                        key={index}\r\n                        item={userMount}\r\n                        dashType={userMount.type}\r\n                        link={'/Mounts'}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        return (\r\n            <div className='Dashboard'>\r\n                <div className='displayButton'>\r\n                    <Link to='/Favorites'><button onClick={() => this.props.displayDashItem(null)}>Display all</button></Link>\r\n                </div>\r\n                <div className='SectionTitle'>\r\n                    <Link to='/Monsters'>MONSTERS</Link>\r\n                </div>\r\n                <div className='Items'>\r\n                    {monstItems}\r\n                </div>\r\n                <div className='SectionTitle'>\r\n                    <Link to='/Spells'>SPELLS</Link>\r\n                </div>\r\n                <div className='Items'>\r\n                    {spellItems}\r\n                </div>\r\n                <div className='SectionTitle'>\r\n                    <Link to='/Armor'>ARMOR</Link>\r\n                </div>\r\n                <div className='Items'>\r\n                    {armorItems}\r\n                    {userArmorItems}\r\n                </div>\r\n                <div className='SectionTitle'>\r\n                    <Link to='/Weapons'>WEAPONS</Link>\r\n                </div>\r\n                <div className='Items'>\r\n                    {weaponItems}\r\n                </div>\r\n                <div className='SectionTitle'>\r\n                    <Link to='/Equipment'>EQUIPMENT</Link>\r\n                </div>\r\n                <div className='Items'>\r\n                    {equipItems}\r\n                    {userEquipItems}\r\n                </div>\r\n                <div className='SectionTitle'>\r\n                    <Link to='/Mounts'>MOUNTS & VEHICLES</Link>\r\n                </div>\r\n                <div className='Items'>\r\n                    {mountItems}\r\n                    {userMountItems}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dash: state.dash,\r\n        userArmor: state.userArmor\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getDash: () => dispatch(actions.getDash()),\r\n        displayDashItem: (payload) => dispatch(actions.displayDashItem(payload))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\nimport Monster from './Monster';\r\nimport Header from '../Header';\r\nimport Dashboard from '../dashboard/Dashboard';\r\n\r\nclass Monsters extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getMonsters();\r\n        this.props.getUser();\r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredMonsters = this.props.monsters.filter(monster => {\r\n            return monster.name.toUpperCase().includes(this.props.search.toUpperCase())\r\n        });\r\n\r\n        const monsters = filteredMonsters.map((monster, index) => {\r\n            return (\r\n                <Monster\r\n                    key={index}\r\n                    name={monster.name}\r\n                    url={monster.url}\r\n                />\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div className='Window' >\r\n                <Header title='monsters' />\r\n                <div className='Body'>\r\n                    <div className='Monsters'>\r\n                        {monsters}\r\n                    </div>\r\n\r\n                    <Dashboard />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        monsters: state.monsters,\r\n        user: state.user,\r\n        search: state.search\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getMonsters: () => dispatch(actions.getMonsters()),\r\n        getUser: () => dispatch(actions.getUser()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Monsters);","import React, { Component } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\n\r\nclass Spell extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            spell: {},\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.props.url);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({ loading: true });\r\n            this.getData(this.props.url);\r\n        }\r\n    }\r\n\r\n    getData(url) {\r\n        axios.get(url).then(res => {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    spell: res.data\r\n                }, this.setState({ loading: false }))\r\n            }, 2000\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { spell } = this.state;\r\n\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className='Spell' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <ReactLoading type={'bars'} color={'black'} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className='Spell'>\r\n                    <h1>{this.props.name}</h1>\r\n                    <p>casting time: {spell.casting_time}</p>\r\n                    <p>range: {spell.range}</p>\r\n                    <p>components: {spell.components} {spell.material ? `(${spell.material})` : ''}</p>\r\n                    <p>duration: {spell.duration}</p>\r\n                    <p>{this.state.spell.desc}</p>\r\n                    <p>{spell.higher_level ? `at higher levels: ${spell.higher_level}` : ''}</p>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.addToDash({\r\n                            name: this.state.spell.name,\r\n                            url: this.state.spell.url,\r\n                            type: 'spell'\r\n                        })}\r\n                        >ADD\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToDash: (payload) => dispatch(actions.addToDash(payload))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Spell);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck/index';\r\nimport Spell from './Spell';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport Header from '../Header';\r\n\r\nclass Spells extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getSpells();\r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredSpells = this.props.spells.filter(spell => {\r\n            return spell.name.toUpperCase().includes(this.props.search.toUpperCase());\r\n        });\r\n\r\n        const spells = filteredSpells.map((spell, index) => {\r\n            return (\r\n                <Spell\r\n                    key={index}\r\n                    name={spell.name}\r\n                    url={spell.url}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='Window'>\r\n                <Header title='spells'/>\r\n                <div className='Body'>\r\n                    <div className='Spells'>\r\n                        {spells}\r\n                    </div>\r\n                    <Dashboard />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spells: state.spells,\r\n        user: state.user,\r\n        search: state.search\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getSpells: () => dispatch(actions.getSpells())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Spells);","import React, { Component } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\n\r\nclass Arm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            arm: {},\r\n            cost: {},\r\n            armorClass: {},\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.props.url);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({ loading: true })\r\n            this.getData(this.props.url);\r\n        }\r\n    }\r\n\r\n    getData(url) {\r\n        axios.get(url).then(res => {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    arm: res.data,\r\n                    cost: res.data.cost,\r\n                    armorClass: res.data.armor_class\r\n                }, this.setState({ loading: false }))\r\n            }, 2000\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { arm, cost, armorClass } = this.state;\r\n\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className='Arm' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <ReactLoading type={'bars'} color={'black'} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className='Arm'>\r\n                    <h1>{arm.name}</h1>\r\n                    <h2>({arm.armor_category})</h2>\r\n                    <p>COST: {cost.quantity} {cost.unit}</p>\r\n                    <p>ARMOR CLASS (AC): {armorClass.base} {armorClass.dex_bonus ? '+ Dex Modifier' : ''} {armorClass.max_bonus ? `(max ${armorClass.max_bonus})` : ''}</p>\r\n                    <p>STRENGTH: Str {arm.str_minimum}</p>\r\n                    <p>STEALTH: {arm.stealth_disadvantage ? 'Disadvantage' : '---'}</p>\r\n                    <p>WEIGHT: {arm.weight} lb.</p>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.addToDash({\r\n                            name: this.state.arm.name,\r\n                            url: this.state.arm.url,\r\n                            type: 'arm',\r\n                            index: null\r\n                        })}\r\n                        >ADD\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToDash: (payload) => dispatch(actions.addToDash(payload)),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Arm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\n\r\nclass UserArm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            name: null,\r\n            category: null,\r\n            cost: null,\r\n            armorClass: null,\r\n            strength: null,\r\n            stealth: null,\r\n            weight: null\r\n        }\r\n    }\r\n\r\n    handleChange(obj) {\r\n        this.setState(obj);\r\n    }\r\n\r\n    handleSave() {\r\n        this.setState({edit: false});\r\n        this.props.editUserArm({\r\n            name: this.state.name || this.props.item.name,\r\n            category: this.state.category || this.props.item.category,\r\n            cost: this.state.cost || this.props.item.cost,\r\n            armorClass: this.state.armorClass || this.props.item.armorClass,\r\n            strength: this.state.strength || this.props.item.strength,\r\n            stealth: this.state.stealth || this.props.item.stealth,\r\n            weight: this.state.weight || this.props.item.weight,\r\n            id: this.props.item.id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {item} = this.props;\r\n        if (this.state.edit === false) {\r\n            return (\r\n                <div className='Arm'>\r\n                    <h1>{item.name}</h1>\r\n                    <h2>{item.category}</h2>\r\n                    <p>COST: {item.cost}</p>\r\n                    <p>ARMOR CLASS (AC): {item.armorclass}</p>\r\n                    <p>STRENGTH: {item.strength}</p>\r\n                    <p>STEALTH: {item.stealth}</p>\r\n                    <p>Weight: {item.weight}</p>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.userArmDash({dashItem: true, id: item.id})}>ADD</button>\r\n                        <button onClick={() => this.setState({edit: true})}>EDIT</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if(this.state.edit === true) {\r\n            return (\r\n                <div className='Arm'>\r\n                    <input className='h1' placeholder={item.name} onChange={e => this.handleChange({name: e.target.value})}/>\r\n                    <input className='h2' placeholder={item.category} onChange={e => this.handleChange({category: e.target.value})}/>\r\n                    <input className='p' placeholder={item.cost} onChange={e => this.handleChange({cost: e.target.value})}/>\r\n                    <input className='p' placeholder={item.armorclass} onChange={e => this.handleChange({armorClass: e.target.value})}/>\r\n                    <input className='p' placeholder={item.strength} onChange={e => this.handleChange({strength: e.target.value})}/>\r\n                    <input className='p' placeholder={item.stealth} onChange={e => this.handleChange({stealth: e.target.value})}/>\r\n                    <input className='p' placeholder={item.weight} onChange={e => this.handleChange({weight: e.target.value})}/>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.remUserArm(item.name)}>DEL</button>\r\n                        <button onClick={() => this.handleSave()}>SAVE</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userArmDash: (payload) => dispatch(actions.userArmDash(payload)),\r\n        editUserArm: (payload) => dispatch(actions.editUserArm(payload)),\r\n        remUserArm: (payload) => dispatch(actions.remUserArm(payload))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(UserArm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\nimport Arm from './Arm';\r\nimport UserArm from './UserArm';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport Header from '../Header';\r\n\r\nclass Armor extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            name: '',\r\n            category: '',\r\n            cost: '',\r\n            armorclass: '',\r\n            strength: '',\r\n            stealth: '',\r\n            weight: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEquipment();\r\n        this.props.getUserArm();\r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredArmor = this.props.armor.filter(arm => {\r\n            return arm.name.toUpperCase().includes(this.props.search.toUpperCase());\r\n        });\r\n\r\n        const armor = filteredArmor.map((arm, index) => {\r\n            return (\r\n                <Arm\r\n                    key={index}\r\n                    name={arm.name}\r\n                    url={arm.url}\r\n                />\r\n            );\r\n        });\r\n\r\n        const filteredUserArmor = this.props.userArmor.filter(arm => {\r\n            return arm.name.toUpperCase().includes(this.props.search.toUpperCase());\r\n        });\r\n\r\n        const userArmor = filteredUserArmor.map((arm, index) => {\r\n            return (\r\n                <UserArm\r\n                    key={index}\r\n                    item={arm}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='Window'>\r\n                <Header title='armor' />\r\n                <div className='Body'>\r\n                    <div className='Armor'>\r\n                        {armor}\r\n                        {userArmor}\r\n                        <div className='createDiv'>\r\n                            <input placeholder='name' onChange={(e) => this.setState({ name: e.target.value })} />\r\n                            <input placeholder='category' onChange={(e) => this.setState({ category: e.target.value })} />\r\n                            <input placeholder='cost' onChange={(e) => this.setState({ cost: e.target.value })} />\r\n                            <input placeholder='armorClass' onChange={(e) => this.setState({ armorClass: e.target.value })} />\r\n                            <input placeholder='strength' onChange={(e) => this.setState({ strength: e.target.value })} />\r\n                            <input placeholder='stealth' onChange={(e) => this.setState({ stealth: e.target.value })} />\r\n                            <input placeholder='weight' onChange={(e) => this.setState({ weight: e.target.value })} />\r\n                            <button onClick={() => this.props.createArm(this.state)}>create</button>\r\n                        </div>\r\n                    </div>\r\n                    <Dashboard />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        armor: state.armor,\r\n        userArmor: state.userArmor,\r\n        user: state.user,\r\n        search: state.search\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getEquipment: () => dispatch(actions.getEquipment()),\r\n        getUserArm: () => dispatch(actions.getUserArm()),\r\n        createArm: (payload) => dispatch(actions.createArm(payload))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Armor);","import React, { Component } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\n\r\nclass Weapon extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            weapon: {},\r\n            cost: {},\r\n            damage: {},\r\n            damageType: {},\r\n            properties: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.props.url);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({ loading: true });\r\n            this.getData(this.props.url);\r\n        }\r\n    }\r\n\r\n    getData(url) {\r\n        axios.get(url).then(res => {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    weapon: res.data,\r\n                    cost: res.data.cost,\r\n                    damage: res.data.damage,\r\n                    damageType: res.data.damage.damage_type,\r\n                    properties: res.data.properties\r\n                }, this.setState({ loading: false }))\r\n            }, 2000\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { weapon, cost, damage, damageType } = this.state;\r\n        const properties = this.state.properties.map(prop => {\r\n            return (\r\n                prop.name\r\n            )\r\n        })\r\n\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className='Weapon' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <ReactLoading type={'bars'} color={'black'} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className='Weapon'>\r\n                    <h1>{this.props.name}</h1>\r\n                    <h2>({weapon.category_range})</h2>\r\n                    <p>cost: {cost.quantity} {cost.unit}</p>\r\n                    <p>damage: {damage.dice_count}d{damage.dice_value} {damageType.name}</p>\r\n                    <p>weight: {weapon.weight} lb.</p>\r\n                    <p className='properties'>properties: {properties}</p>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.addToDash({\r\n                            name: this.state.weapon.name,\r\n                            url: this.state.weapon.url,\r\n                            type: 'weapon'\r\n                        })}\r\n                        >ADD\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToDash: (payload) => dispatch(actions.addToDash(payload))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Weapon);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck/index';\r\nimport Weapon from './Weapon';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport Header from '../Header';\r\n\r\nclass Weapons extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getEquipment();\r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredWeapons = this.props.weapons.filter(weapon => {\r\n            return weapon.name.toUpperCase().includes(this.props.search.toUpperCase());\r\n        });\r\n\r\n        const weapons = filteredWeapons.map((weapon, index) => {\r\n            return (\r\n                <Weapon\r\n                    key={index}\r\n                    name={weapon.name}\r\n                    url={weapon.url}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='Window'>\r\n                <Header title='weapons'/>\r\n                <div className='Body'>\r\n                    <div className='Weapons'>\r\n                        {weapons}\r\n                    </div>\r\n                    <Dashboard />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weapons: state.weapons,\r\n        user: state.user,\r\n        search: state.search\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getEquipment: () => dispatch(actions.getEquipment())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weapons);","import React, { Component } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\n\r\nclass Equip extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            equip: {},\r\n            cost: {},\r\n            loading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.props.url);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({ loading: true });\r\n            this.getData(this.props.url);\r\n        }\r\n    }\r\n\r\n    getData(url) {\r\n        axios.get(url).then(res => {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    equip: res.data,\r\n                    cost: res.data.cost\r\n                }, this.setState({ loading: false }))\r\n            }, 2000\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { equip, cost } = this.state;\r\n\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className='Equip' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <ReactLoading type={'bars'} color={'black'} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className='Equip'>\r\n                    <h1>{this.props.name}</h1>\r\n                    <h2>{equip.gear_category ? `(${equip.gear_category})` : ''}</h2>\r\n                    <p>COST: {cost.quantity || equip.cost} {cost.unit ? cost.unit : ''}</p>\r\n                    <p>Weight: {equip.weight} lb.</p>\r\n                    <p>{equip.desc}</p>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.addToDash({\r\n                            name: this.state.equip.name,\r\n                            url: this.state.equip.url,\r\n                            type: 'equip',\r\n                            index: null\r\n                        })}\r\n                        >ADD\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToDash: (payload) => dispatch(actions.addToDash(payload)),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Equip);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\n\r\nclass UserEquip extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            name: null,\r\n            cost: null,\r\n            weight: null,\r\n            description: null\r\n        }\r\n    }\r\n\r\n    handleChange(obj) {\r\n        this.setState(obj);\r\n    }\r\n\r\n    handleSave() {\r\n        this.setState({edit: false});\r\n        this.props.editUserEquip({\r\n            name: this.state.name || this.props.item.name,\r\n            cost: this.state.cost || this.props.item.cost,\r\n            weight: this.state.weight || this.props.item.weight,\r\n            description: this.state.description || this.props.item.description,\r\n            id: this.props.item.id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {item, key} = this.props;\r\n        if (this.state.edit === false) {\r\n            return (\r\n                <div className='Equip'>\r\n                    <h1>{item.name}</h1>\r\n                    <p>COST: {item.cost}</p>\r\n                    <p>Weight: {item.weight}</p>\r\n                    <p>{item.description}</p>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.addToDash({\r\n                            name: item.name,\r\n                            url: null,\r\n                            type: 'userEquip',\r\n                            index: key\r\n                        })}>ADD</button>\r\n                        <button onClick={() => this.setState({edit: true})}>EDIT</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if(this.state.edit === true) {\r\n            return (\r\n                <div className='Equip'>\r\n                    <input className='h1' placeholder={item.name} onChange={e => this.handleChange({name: e.target.value})}/>\r\n                    <input className='p' placeholder={item.cost} onChange={e => this.handleChange({cost: e.target.value})}/>\r\n                    <input className='p' placeholder={item.weight} onChange={e => this.handleChange({weight: e.target.value})}/>\r\n                    <textarea className='p' placeholder={item.description} onChange={e => this.handleChange({description: e.target.value})}/>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.remUserEquip(item.name)}>DEL</button>\r\n                        <button onClick={() => this.handleSave()}>SAVE</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToDash: (payload) => dispatch(actions.addToDash(payload)),\r\n        editUserEquip: (payload) => dispatch(actions.editUserEquip(payload)),\r\n        remUserEquip: (payload) => dispatch(actions.remUserEquip(payload))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(UserEquip);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\nimport Equip from './Equip';\r\nimport UserEquip from './UserEquip';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport Header from '../Header';\r\n\r\nclass Equipment extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            cost: '',\r\n            weight: '',\r\n            desc: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEquipment();\r\n        this.props.getUserEquip();\r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredEquipment = this.props.equipment.filter(equip => {\r\n            return equip.name.toUpperCase().includes(this.props.search.toUpperCase());\r\n        });\r\n\r\n        const equipment = filteredEquipment.map((equip, index) => {\r\n            return (\r\n                <Equip\r\n                    key={index}\r\n                    name={equip.name}\r\n                    url={equip.url}\r\n                />\r\n            );\r\n        });\r\n\r\n        const filteredUserEquipment = this.props.userEquipment.filter(equip => {\r\n            return equip.name.toUpperCase().includes(this.props.search.toUpperCase());\r\n        });\r\n\r\n        const userEquipment = filteredUserEquipment.map((equip, index) => {\r\n            return (\r\n                <UserEquip\r\n                    key={index}\r\n                    item={equip}\r\n                />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className='Window'>\r\n                <Header title='equipment'/>\r\n                <div className='Body'>\r\n                    <div className='Equipment'>\r\n                        {equipment}\r\n                        {userEquipment}\r\n                        <div className='createDiv'>\r\n                            <input placeholder='name' onChange={(e) => this.setState({name: e.target.value})}/>\r\n                            <input placeholder='cost' onChange={(e) => this.setState({cost: e.target.value})}/>\r\n                            <input placeholder='weight' onChange={(e) => this.setState({weight: e.target.value})}/>\r\n                            <textarea placeholder='description' onChange={(e) => this.setState({desc: e.target.value})}/>\r\n                            <button onClick={() => this.props.createEquip(this.state)}>create</button>\r\n                        </div>\r\n                    </div>\r\n                    <Dashboard />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        equipment: state.equipment,\r\n        userEquipment: state.userEquipment,\r\n        user: state.user,\r\n        search: state.search\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createEquip: (payload) => dispatch(actions.createEquip(payload)),\r\n        getEquipment: () => dispatch(actions.getEquipment()),\r\n        getUserEquip: () => dispatch(actions.getUserEquip())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Equipment);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Login extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='LoginScreen'>\r\n                <div><img src='/DND.png' alt='DND' /></div>\r\n                <a href=\"/login\"><button className='LoginBut'>LOGIN</button></a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Login);","import React, { Component } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport axios from 'axios';\r\nimport { actions } from '../../duck';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Mount extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            mount: {},\r\n            cost: {},\r\n            speed: {},\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.props.url);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({ loading: true });\r\n            this.getData(this.props.url);\r\n        }\r\n    }\r\n\r\n    getData(url) {\r\n        axios.get(url).then(res => {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    mount: res.data,\r\n                    cost: res.data.cost,\r\n                    speed: res.data.speed\r\n                }, this.setState({ loading: false }))\r\n            }, 2000\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { mount, cost, speed } = this.state;\r\n\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className='Mount' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <ReactLoading type={'bars'} color={'black'} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className='Mount'>\r\n                    <h1>{this.props.name}</h1>\r\n                    <h2>({mount.vehicle_category})</h2>\r\n                    <p>cost: {cost.quantity} {cost.unit}</p>\r\n                    <p>{speed ? `speed: ${speed.quantity} ${speed.unit}` : ''}</p>\r\n                    <p>{mount.capacity ? `capacity: ${mount.capacity}` : ''}</p>\r\n                    <p>{mount.weight ? `weight: ${mount.weight} lb.` : ''}</p>\r\n                    <p>{mount.desc ? mount.desc : ''}</p>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.addToDash({\r\n                            name: this.state.mount.name,\r\n                            url: this.state.mount.url,\r\n                            type: 'mount',\r\n                            index: null\r\n                        })}\r\n                        >ADD\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToDash: (payload) => dispatch(actions.addToDash(payload))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Mount);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\n\r\nclass UserMount extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            edit: false,\r\n            name: null,\r\n            cost: null,\r\n            speed: null,\r\n            capacity: null,\r\n            description: null,\r\n        }\r\n    }\r\n\r\n    handleChange(obj) {\r\n        this.setState(obj);\r\n    }\r\n\r\n    handleSave() {\r\n        this.setState({edit: false});\r\n        this.props.editUserMount({\r\n            name: this.state.name || this.props.item.name,\r\n            cost: this.state.cost || this.props.item.cost,\r\n            speed: this.state.weight || this.props.item.weight,\r\n            capacity: this.state.capacity || this.props.item.capacity,\r\n            description: this.state.description || this.props.item.description,\r\n            id: this.props.item.id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {item, key} = this.props;\r\n        if (this.state.edit === false) {\r\n            return (\r\n                <div className='Equip'>\r\n                    <h1>{item.name}</h1>\r\n                    <p>COST: {item.cost}</p>\r\n                    <p>SPEED: {item.speed}</p>\r\n                    <p>CAPACITY: {item.capacity}</p>\r\n                    <p>{item.description}</p>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.addToDash({\r\n                            name: item.name,\r\n                            url: null,\r\n                            type: 'userMount',\r\n                            index: key\r\n                        })}>ADD</button>\r\n                        <button onClick={() => this.setState({edit: true})}>EDIT</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if(this.state.edit === true) {\r\n            return (\r\n                <div className='Equip'>\r\n                    <input className='h1' placeholder={item.name} onChange={e => this.handleChange({name: e.target.value})}/>\r\n                    <input className='p' placeholder={item.cost} onChange={e => this.handleChange({cost: e.target.value})}/>\r\n                    <input className='p' placeholder={item.speed} onChange={e => this.handleChange({weight: e.target.value})}/>\r\n                    <input className='p' placeholder={item.capacity} onChange={e => this.handleChange({capacity: e.target.value})}/>\r\n                    <textarea className='p' placeholder={item.description} onChange={e => this.handleChange({description: e.target.value})}/>\r\n                    <div className='addButton'>\r\n                        <button onClick={() => this.props.remUserMount(item.name)}>DEL</button>\r\n                        <button onClick={() => this.handleSave()}>SAVE</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDipatchToProps = (dispatch) => {\r\n    return {\r\n        addToDash: (payload) => dispatch(actions.addToDash(payload)),\r\n        editUserMount: (payload) => dispatch(actions.editUserMount(payload)),\r\n        remUserMount: (payload) => dispatch(actions.remUserMount(payload))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDipatchToProps)(UserMount);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../duck';\r\nimport Mount from './Mount';\r\nimport UserMount from './UserMount';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport Header from '../Header';\r\n\r\nclass Mounts extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            cost: '',\r\n            speed: '',\r\n            capacity: '',\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEquipment();\r\n        this.props.getUserMount();\r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredMounts = this.props.mounts.filter(mount => {\r\n            return mount.name.toUpperCase().includes(this.props.search.toUpperCase());\r\n        });\r\n\r\n        const mounts = filteredMounts.map((mount, index) => {\r\n            return (\r\n                <Mount\r\n                    key={index}\r\n                    name={mount.name}\r\n                    url={mount.url}\r\n                />\r\n            );\r\n        });\r\n\r\n        const filteredUserMounts = this.props.userMounts.filter(mount => {\r\n            return mount.name.toUpperCase().includes(this.props.search.toUpperCase());\r\n        });\r\n\r\n        const userMounts = filteredUserMounts.map((mount, index) => {\r\n            return (\r\n                <UserMount\r\n                    key={index}\r\n                    item={mount}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='Window'>\r\n                <Header title='mounts'/>\r\n                <div className='Body'>\r\n                    <div className='Mounts'>\r\n                        {mounts}\r\n                        {userMounts}\r\n                        <div className='createDiv'>\r\n                            <input placeholder='name' onChange={(e) => this.setState({name: e.target.value})}/>\r\n                            <input placeholder='cost' onChange={(e) => this.setState({cost: e.target.value})}/>\r\n                            <input placeholder='speed' onChange={(e) => this.setState({speed: e.target.value})}/>\r\n                            <input placeholder='capacity' onChange={(e) => this.setState({capacity: e.target.value})}/>\r\n                            <textarea placeholder='description' onChange={(e) => this.setState({description: e.target.value})}/>\r\n                            <button onClick={() => this.props.createMount(this.state)}>create</button>\r\n                        </div>\r\n                    </div>\r\n                    <Dashboard />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mounts: state.mounts,\r\n        userMounts: state.userMounts,\r\n        user: state.user,\r\n        search: state.search\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createMount: (payload) => dispatch(actions.createMount(payload)),\r\n        getEquipment: () => dispatch(actions.getEquipment()),\r\n        getUserMount: () => dispatch(actions.getUserMount())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mounts);","import React, { Component } from 'react';\r\nimport Monster from './monsters/Monster';\r\nimport Spell from './spells/Spell';\r\nimport Arm from './armor/Arm';\r\nimport UserArm from './armor/UserArm';\r\nimport Weapon from './weapons/Weapon';\r\nimport Equip from './equipment/Equip';\r\nimport Mount from './mounts/Mount';\r\nimport UserMount from './mounts/UserMount';\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Favorites extends Component {\r\n\r\n    render() {\r\n        const monsters = this.props.dash.map((monster, index) => {\r\n            if (monster.type === 'monster') {\r\n                return (\r\n                    <Monster\r\n                        key={index}\r\n                        name={monster.name}\r\n                        url={monster.url}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const spells = this.props.dash.map((spell, index) => {\r\n            if (spell.type === 'spell') {\r\n                return (\r\n                    <Spell\r\n                        key={index}\r\n                        name={spell.name}\r\n                        url={spell.url}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const armor = this.props.dash.map((arm, index) => {\r\n            if (arm.type === 'arm') {\r\n                return (\r\n                    <Arm\r\n                        key={index}\r\n                        name={arm.name}\r\n                        url={arm.url}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const weapons = this.props.dash.map((weapon, index) => {\r\n            if (weapon.type === 'weapon') {\r\n                return (\r\n                    <Weapon\r\n                        key={index}\r\n                        name={weapon.name}\r\n                        url={weapon.url}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const equipment = this.props.dash.map((equip, index) => {\r\n            if (equip.type === 'equip') {\r\n                return (\r\n                    <Equip\r\n                        key={index}\r\n                        name={equip.name}\r\n                        url={equip.url}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        const mounts = this.props.dash.map((mount, index) => {\r\n            if (mount.type === 'mount') {\r\n                return (\r\n                    <Mount\r\n                        key={index}\r\n                        name={mount.name}\r\n                        url={mount.url}\r\n                    />\r\n                )\r\n            } else return null\r\n        });\r\n\r\n        const userMounts = this.props.dash.map((userMount, index) => {\r\n            if (userMount.type === 'userMount') {\r\n                return (\r\n                    <UserMount\r\n                        key={index}\r\n                        name={userMount.name}\r\n                        item={userMount}\r\n                    />\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        if (this.props.displayDashItem.type) {\r\n            switch (this.props.displayDashItem.type) {\r\n                case 'monster':\r\n                    return (\r\n                        <div className='Window'>\r\n                            <Header title='favorites' />\r\n                            <div className='Body'>\r\n                                <div className='Content'>\r\n                                    <Monster\r\n                                        name={this.props.displayDashItem.name}\r\n                                        url={this.props.displayDashItem.url}\r\n                                    />\r\n                                </div>\r\n                                <Dashboard />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                case 'spell':\r\n                    return (\r\n                        <div className='Window'>\r\n                            <Header title='favorites' />\r\n                            <div className='Body'>\r\n                                <div className='Content'>\r\n                                    <Spell\r\n                                        name={this.props.displayDashItem.name}\r\n                                        url={this.props.displayDashItem.url}\r\n                                    />\r\n                                </div>\r\n                                <Dashboard />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                case 'arm':\r\n                    return (\r\n                        <div className='Window'>\r\n                            <Header title='favorites' />\r\n                            <div className='Body'>\r\n                                <div className='Content'>\r\n                                    <Arm\r\n                                        name={this.props.displayDashItem.name}\r\n                                        url={this.props.displayDashItem.url}\r\n                                    />\r\n                                </div>\r\n                                <Dashboard />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                case 'userArm':\r\n                    return (\r\n                        <div className='Window'>\r\n                            <Header title='favorites' />\r\n                            <div className='Body'>\r\n                                <div className='Content'>\r\n                                    <UserArm\r\n                                        item={this.props.displayDashItem}\r\n                                        index={this.props.displayDashItem.index}\r\n                                    />\r\n                                </div>\r\n                                <Dashboard />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                case 'weapon':\r\n                    return (\r\n                        <div className='Window'>\r\n                            <Header title='favorites' />\r\n                            <div className='Body'>\r\n                                <div className='Content'>\r\n                                    <Weapon\r\n                                        name={this.props.displayDashItem.name}\r\n                                        url={this.props.displayDashItem.url}\r\n                                    />\r\n                                </div>\r\n                                <Dashboard />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                case 'equip':\r\n                    return (\r\n                        <div className='Window'>\r\n                            <Header title='favorites' />\r\n                            <div className='Body'>\r\n                                <div className='Content'>\r\n                                    <Equip\r\n                                        name={this.props.displayDashItem.name}\r\n                                        url={this.props.displayDashItem.url}\r\n                                    />\r\n                                </div>\r\n                                <Dashboard />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                case 'mount':\r\n                    return (\r\n                        <div className='Window'>\r\n                            <Header title='favorites' />\r\n                            <div className='Body'>\r\n                                <div className='Content'>\r\n                                    <Mount\r\n                                        name={this.props.displayDashItem.name}\r\n                                        url={this.props.displayDashItem.url}\r\n                                    />\r\n                                </div>\r\n                                <Dashboard />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                case 'userMount':\r\n                    return (\r\n                        <div className='Window'>\r\n                            <Header title='favorites' />\r\n                            <div className='Body'>\r\n                                <div className='Content'>\r\n                                    <UserMount\r\n                                        item={this.props.displayDashItem}\r\n                                        index={this.props.displayDashItem.index}\r\n                                    />\r\n                                </div>\r\n                                <Dashboard />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                default:\r\n                    return null\r\n            }\r\n        } else {\r\n            return (\r\n                <div className='Window'>\r\n                    <Header title='favorites' />\r\n                    <div className='Body'>\r\n                        <div className='Content'>\r\n                            {monsters}\r\n                            {spells}\r\n                            {armor}\r\n                            {weapons}\r\n                            {equipment}\r\n                            {mounts}\r\n                            {userMounts}\r\n                        </div>\r\n                        <Dashboard />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dash: state.dash,\r\n        user: state.user,\r\n        displayDashItem: state.displayDashItem\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Favorites);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Monsters from './component/monsters/Monsters';\r\nimport Spells from './component/spells/Spells';\r\nimport Armor from './component/armor/Armor';\r\nimport Weapons from './component/weapons/Weapons';\r\nimport Equipment from './component/equipment/Equipment';\r\nimport Login from './component/Login';\r\nimport Mounts from './component/mounts/Mounts';\r\nimport Favorites from './component/Favorites';\r\n\r\nexport default () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={Login} />\r\n            <Route path='/Monsters' component={Monsters} />\r\n            <Route path='/Spells' component={Spells} />\r\n            <Route path='/Weapons' component={Weapons} />\r\n            <Route path='/Armor' component={Armor} />\r\n            <Route path='/Equipment' component={Equipment} />\r\n            <Route path='/Mounts' component={Mounts} />\r\n            <Route path='/Favorites' component={Favorites} />\r\n        </Switch>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Routes from './routes';\r\n\r\n\r\nimport './styles/all.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          \r\n          <Routes />\r\n          \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise-middleware';\r\nimport reducer, { initialState } from './duck';\r\n\r\nconst middleware = applyMiddleware(promiseMiddleware());\r\n\r\n\r\nexport default createStore(reducer, initialState, middleware);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\nconsole.log(store.getState())"],"sourceRoot":""}